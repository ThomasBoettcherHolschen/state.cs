/* State v5 finite state machine library
 * Copyright (c) 2014 Steelbreeze Limited
 * Licensed under MIT and GPL v3 licences
 */
using System;
using System.Linq;

namespace Steelbreeze.Behavior.StateMachines {
	/// <summary>
	/// The interface required of state machine context objects.
	/// </summary>
	/// <typeparam name="TContext">The type of the derived class.</typeparam>
	/// <remarks>
	/// By passing the type of the derived class into this base, it allows the callbacks generated by the state machine to pass the fully typed derived class.
	/// This interface is intended for internal use only.
	/// </remarks>
	public interface IContext<TContext> where TContext : IContext<TContext> {
		/// <summary>
		/// Indicates that the state machine context has been terminated.
		/// </summary>
		/// <remarks>A state machine is only deemed terminated if a transitions target is a Terminate PseudoState.</remarks>
		Boolean IsTerminated { get; set; }

		/// <summary>
		/// Sets and gets the current state of a specified Region
		/// </summary>
		/// <param name="region">The Regions to get/set the current state for.</param>
		/// <returns>The current state of the Region or null if no value has previously been set.</returns>
		Vertex<TContext> this[ Region<TContext> region ] { get; set; }
	}
}
